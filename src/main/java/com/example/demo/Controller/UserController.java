package com.example.demo.Controller;

import com.example.demo.Entity.USERS;
import com.example.demo.Repository.UserRepository;
import com.example.demo.Service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private UserService userService;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email, @RequestParam String password) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        try {
            userService.createUser(name, email, password);
            return "Saved";
        } catch(Exception e){
            return "Error :" + e.getMessage();
        }
    }

    @GetMapping(path = "/user/{id}")
    public @ResponseBody Optional<USERS> getUserName (@PathVariable Integer id){
        return userRepository.findById(id);
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<USERS> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/")
    public @ResponseBody String getSomething(){
        return "Good";
    }
}